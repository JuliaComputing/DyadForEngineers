component RoadData
    parameter bump::Real = 0.2
    parameter freq::Real = 0.5
    parameter offset::Real = 0.4
    parameter loop::Real = 10

    y = RealOutput()
relations
    y = ifelse((time % loop) < offset, 0.0, ifelse((time % loop) - offset > freq, 0.0, (bump*(1 - cos(2*pi*(time-offset)/freq)))))
end 


component Road
    flange = MechanicalPort()
    s = RealInput()
relations
    der(s) = flange.v
end


component WheelSystem
    wheel = MassSpringDamper()
    road = Road()
    road_data = RoadData()
relations
    connect(road.flange, wheel.port_sd)
    connect(road_data.out, road.s)
end

# This connector represents a real signal as an input to a component
connector RealInput = input Real metadata {  "Dyad": {"icons": {"default": "dyad://Dyad/RealInput.svg"}, "path": {"stroke": "blue"}}}